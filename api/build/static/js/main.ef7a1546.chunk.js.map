{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","username","setUsername","useState","password","setPassword","isLoggedIn","setIsLoggedIn","profile","setProfile","isRegistering","setIsRegistering","registrationDetails","setRegistrationDetails","spocName","email","organization","state","address","phone","pin","newPassword","setNewPassword","selectedCard","setSelectedCard","handleRegisterChange","e","name","value","target","React","createElement","className","onClick","handleLogout","Fragment","type","placeholder","onChange","handleRegister","alert","handleLogin","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.ef7a1546.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\"; // Ensure your styles are imported\n\nfunction App() {\n  // State for user details\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [profile, setProfile] = useState(null);\n  const [isRegistering, setIsRegistering] = useState(false);\n  const [registrationDetails, setRegistrationDetails] = useState({\n    spocName: \"\",\n    email: \"\",\n    organization: \"\",\n    state: \"\",\n    address: \"\",\n    phone: \"\",\n    pin: \"\",\n  });\n  const [newPassword, setNewPassword] = useState(\"\"); // New password for the user\n  const [selectedCard, setSelectedCard] = useState(null); // Track selected card\n\n  // Handle changes in registration form\n  const handleRegisterChange = (e) => {\n    const { name, value } = e.target;\n    setRegistrationDetails({\n      ...registrationDetails,\n      [name]: value,\n    });\n  };\n\n  // Handle registration form submission\n  const handleRegister = () => {\n    if (\n      registrationDetails.spocName &&\n      registrationDetails.email &&\n      registrationDetails.organization &&\n      registrationDetails.state &&\n      registrationDetails.address &&\n      registrationDetails.phone &&\n      registrationDetails.pin\n    ) {\n      // Set the mobile number as the password after registration\n      const password = registrationDetails.phone;\n      setProfile({\n        ...registrationDetails,\n        password, // Setting mobile number as password\n      });\n      alert(\"Registration successful! Your mobile number has been set as your password.\");\n      setIsRegistering(false); // Switch to login form after registration\n    } else {\n      alert(\"Please fill out all fields.\");\n    }\n  };\n\n  // Handle login form submission\n  const handleLogin = () => {\n    if (username === registrationDetails.spocName && password === profile?.password) {\n      setIsLoggedIn(true);\n    } else {\n      alert(\"Invalid username or password!\");\n    }\n  };\n\n  // Handle logout\n  const handleLogout = () => {\n    setProfile(null);\n    setIsLoggedIn(false);\n    setUsername(\"\");\n    setPassword(\"\");\n  };\n\n  // Handle password change\n  const handlePasswordChange = () => {\n    if (newPassword) {\n      setProfile({ ...profile, password: newPassword });\n      setNewPassword(\"\");\n      alert(\"Password updated successfully!\");\n    } else {\n      alert(\"Please enter a valid password.\");\n    }\n  };\n\n  // Dashboard Card Layout\n  const renderDashboard = () => (\n    <div className=\"dashboard-cards\">\n      <div\n        className={`card ${selectedCard === \"profile\" ? \"selected\" : \"\"}`}\n        onClick={() => setSelectedCard(\"profile\")}\n      >\n        <h3>My Profile</h3>\n        <p><strong>Name:</strong> {profile?.spocName}</p>\n        <p><strong>Email:</strong> {profile?.email}</p>\n        <p><strong>Organization:</strong> {profile?.organization}</p>\n      </div>\n      <div\n        className={`card ${selectedCard === \"submittedData\" ? \"selected\" : \"\"}`}\n        onClick={() => setSelectedCard(\"submittedData\")}\n      >\n        <h3>My Submitted Data</h3>\n        <p>No data submitted yet.</p>\n      </div>\n      <div\n        className={`card ${selectedCard === \"invoice\" ? \"selected\" : \"\"}`}\n        onClick={() => setSelectedCard(\"invoice\")}\n      >\n        <h3>Invoice</h3>\n        <p>No invoices yet.</p>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"App\">\n      <h1>National Document Verification Network Organization Dashboard</h1>\n\n      {!isLoggedIn ? (\n        <>\n          {!isRegistering ? (\n            // Login form\n            <div>\n              <h2>Login</h2>\n              <input\n                type=\"text\"\n                placeholder=\"Enter Username\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n              />\n              <br />\n              <input\n                type=\"password\"\n                placeholder=\"Enter Password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n              <br />\n              <button onClick={handleLogin}>Login</button>\n              <p>\n                Don't have an account?{\" \"}\n                <button onClick={() => setIsRegistering(true)}>Register</button>\n              </p>\n            </div>\n          ) : (\n            // Registration form\n            <div>\n              <h2>Register</h2>\n              <input\n                type=\"text\"\n                name=\"spocName\"\n                placeholder=\"SPOC Name\"\n                value={registrationDetails.spocName}\n                onChange={handleRegisterChange}\n              />\n              <br />\n              <input\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Email\"\n                value={registrationDetails.email}\n                onChange={handleRegisterChange}\n              />\n              <br />\n              <input\n                type=\"text\"\n                name=\"organization\"\n                placeholder=\"Organization\"\n                value={registrationDetails.organization}\n                onChange={handleRegisterChange}\n              />\n              <br />\n              <input\n                type=\"text\"\n                name=\"state\"\n                placeholder=\"State\"\n                value={registrationDetails.state}\n                onChange={handleRegisterChange}\n              />\n              <br />\n              <input\n                type=\"text\"\n                name=\"address\"\n                placeholder=\"Address\"\n                value={registrationDetails.address}\n                onChange={handleRegisterChange}\n              />\n              <br />\n              <input\n                type=\"text\"\n                name=\"phone\"\n                placeholder=\"Phone\"\n                value={registrationDetails.phone}\n                onChange={handleRegisterChange}\n              />\n              <br />\n              <input\n                type=\"text\"\n                name=\"pin\"\n                placeholder=\"Pin\"\n                value={registrationDetails.pin}\n                onChange={handleRegisterChange}\n              />\n              <br />\n              <button onClick={handleRegister}>Register</button>\n              <p>\n                Already have an account?{\" \"}\n                <button onClick={() => setIsRegistering(false)}>Login</button>\n              </p>\n            </div>\n          )}\n        </>\n      ) : (\n        // User profile page and dashboard\n        <div>\n          <div className=\"dashboard-header\">\n            <h2>Welcome, {profile.spocName}!</h2>\n          </div>\n\n          {renderDashboard()}\n\n          <button onClick={handleLogout}>Logout</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}